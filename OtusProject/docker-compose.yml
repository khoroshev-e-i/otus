services:
  master:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_master"
    image: citusdata/citus:12.1.3
    restart: always
    labels: ["com.citusdata.role=Master"]
    shm_size: 128mb
    volumes:
      - type: bind
        source: /e/KB/docker/volumes/citus_master
        target: /var/lib/postgresql/data
    environment: &AUTH
      POSTGRES_DB: "${POSTGRES_DB:-postgres}"
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${POSTGRES_USER:-postgres}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
    ports: 
      - 5432:5432
  api:
    image: api
    build:
      target: "final"
      context: .
      dockerfile: Api/Dockerfile
    depends_on: 
      - master
    ports:
      - 5000:8080
  worker:
    image: citusdata/citus:12.1.3
    labels: [ "com.citusdata.role=Worker" ]
    environment: *AUTH
    command: "/wait-for-manager.sh"
    depends_on:
      - manager
    deploy:
      replicas: 3
    volumes:
      - healthcheck-volume:/healthcheck
  manager:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_manager"
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
      - type: bind
        source: /e/KB/docker/volumes/pg_citus_manager
        target: /var/lib/postgresql/data
    depends_on: [master]
    environment: *AUTH
#  db-slave:
#    container_name: slave
#    image: postgres
#    depends_on:
#      - db
#    networks:
#      - pgnet
#    restart: always
#    volumes:
#      - type: bind
#        source: /e/KB/docker/volumes/slave
#        target: /var/lib/postgresql/data
#    shm_size: 128mb
#    environment:
#      POSTGRES_PASSWORD: Qwe123123.
#      POSTGRES_USER: postgres
#    ports:
#      - 54302:5432
#  pg-async-slave:
#    container_name: async-slave
#    image: postgres
#    depends_on:
#      - db
#    networks:
#      - pgnet
#    restart: always
#    volumes:
#      - type: bind
#        source: /e/KB/docker/volumes/async-slave
#        target: /var/lib/postgresql/data
#    shm_size: 128mb
#    environment:
#      POSTGRES_PASSWORD: Qwe123123.
#      POSTGRES_USER: postgres
#    ports:
#      - 54301:5432
volumes:
  healthcheck-volume: